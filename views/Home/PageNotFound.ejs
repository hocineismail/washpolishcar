<% include ../_header %>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://fonts.googleapis.com/css?family=Cairo" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Yesteryear&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Yesteryear&display=swap" rel="stylesheet">
 <script crossorigin src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

  <title>washpoloshcar - الصفحة غير موجودة</title> 
   <style> 
   body {
       direction: rtl;
       text-align: right;
       font-family: 'Cairo', sans-serif;
   }
    .sidenav {
        height: 100%;
        width: 0;
        position: fixed;
        z-index: 1;
        top: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0.808);
        overflow-x: hidden;
        transition: 0.5s;
        padding-top: 60px;
        text-align:center;
      }
      
      .sidenav a {
        padding: 8px 8px 8px 32px;
        text-decoration: none;
        font-size: 25px;
        color: #fff;
        display: block;
        transition: 0.3s;
      
      }
      
      .sidenav a:hover{
        color: rgb(63, 161, 226);
      }
      
      .sidenav .closebtn {
        position: absolute;
        top: 0;
        right: 25px;
        font-size: 36px;
        margin-left: 50px;
      }
      .nav-bar {
            list-style-type: none;
            padding-top: 10px;
            padding-bottom: 10px;
            margin: 0;
            
            overflow: hidden;
            background-color: #0075C2;
            }

.nav-item {
  float: right;
}

.nav-item a {
  display: block;
  color: white;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
}

.nav-item a:hover {
   color: #fff;
   text-decoration: none
}

.openNavbar {
    
    display: none
}
.openNavbar a {
    color: #fff;
   
}

 
@media screen and (max-width: 750px) {
    .openNavbar {
       display: block
     }
      .nav-item {
          display: none
      }
      
      }
      @media screen and (max-height: 450px) {
        .sidenav {padding-top: 15px;}
        .sidenav a {font-size: 18px;}
      }

    #signup:hover   {
    background-color: #0075C2;
    color: #fff;
    border: 1px solid #fff
}
#developer  {
   color: rgb(204, 204, 204)
}

#colorLink  {
    text-align: right;
    color: #fff;
   
}


#signin:hover {
    background-color: rgb(30, 129, 196);
    color: #fff;
    border-color: #fff
}

#signin {
    margin-top: 10px;
    margin-left: 10px;
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 12px;
    padding-left: 12px;
    border-bottom-left-radius: 50px 50px;
    border-bottom-right-radius: 50px 50px;
    border-top-left-radius: 50px 50px;
    border-top-right-radius: 50px 50px;
    background-color: #0075C2;
    color: #fff;
    border: 1px solid #fff
}
.hero-image {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    background-image: linear-gradient(rgba(0, 116, 194, 0.486), rgba(0, 0, 0, 0.637)), url("http://localhost:3000/images/washcar.jpg");
    height: 100%;
    color: #fff;
    position: relative;
  }

.car-login {
   margin-left: auto;
   margin-right: auto
  }

.header { 
    margin-left: auto;
    margin-right: auto
  }


#signup  {
    margin-top: 10px;
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 12px;
    padding-left: 12px;
    border-bottom-left-radius: 50px 50px;
    border-bottom-right-radius: 50px 50px;
    border-top-left-radius: 50px 50px;
    border-top-right-radius: 50px 50px;
    background-color: #fff;
    color: #0075C2;
    border: 1px solid #0075C2;
    border-color: #0075C2
}
.botton-nav {
    float: left
}


#signinheader:hover   {
    background-color: #0075C2;
    color: #fff;
    border-color: #fff
}

#signinheader  {   
    border-bottom-right-radius: 50px 50px;  
    border-top-right-radius: 50px 50px;
    background-color: #fff;
    color: #0075C2;
    border-color: #0075C2
}


#signupheader:hover   {
    background-color: #0075C2;
    color: #fff;
    border-color: #fff
}

#signupheader  { 
    border-bottom-left-radius: 50px 50px;
    border-top-left-radius: 50px 50px;
    background-color: #fff;
    color: #0075C2;
    border-color: #0075C2
}


.hero-text {
    text-align: center; 
    top: 200px;    
    color: white;
  }

.under-title {
    text-align: center;
    padding: 5%;
    padding-bottom: 8%
}
.star-yallow {
    color: rgb(255, 251, 0)
}

.star-grey {
    color: rgb(172, 172, 172)
  }

a.link-card {
    text-decoration: none;
    color: black
}

.read-more {
    margin-top: 5%; 
    margin-left: auto;
    margin-right: auto;
    border: 1px solid black;
    width: 150px;
}

.section-one {
    background-color: rgba(0, 116, 194, 0.082);
    padding-bottom: 7%
}

.icon-service {
    font-size: 80px;
    text-align: center;
    color: rgba(0, 116, 194, 0.658)
}

.score {
  display: block;
  font-size: 16px;
  position: relative;
  overflow: hidden;
}

.score-wrap {
  display: inline-block;
  position: relative;
  height: 19px;
}

.score .stars-active {
  color: #EEBD01;
  position: relative;
  z-index: 10;
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
}

.score .stars-inactive {
  color: grey;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-text-stroke: initial;
  /* overflow: hidden; */
}

.bar-search {

    background-color: rgba(0, 116, 194, 0.082);
    padding: 20px;
    border-radius: 20px
}

.result-card {
    margin-bottom: 10px
}

.position-pagination {
    margin-right: auto;
    margin-left: auto
}

.signin {
    width: 500px;
    margin-left: auto;
    margin-right: auto
}


@media only screen and (max-width: 600px) {
    .signin {
        width: 100%;
       margin-left: auto;
       margin-right: auto
    }
  }


#logo {
    color: #fff;
    padding-top: 8px;
    font-family: 'Yesteryear', cursive;
    font-size: 30px
}
      </style>
</head>
<body dir="rtl">
    
    <div id="mySidenav" class="sidenav" dir="rtl">
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
        <a href="#">الصفحة الرئيسية</a>
        <a href="#">بحث</a>
        <a href="#">تسجبل الدخول</a>
        <a href="#">انشاء حساب جديد </a>
      </div>
    
      <ul class="nav-bar">
          <div class="container">
              <li class="nav-item logo"><h2 id="logo">Wash Polish Car</h2></li>
        <li class="nav-item"><a class="active" href="#home">الصفحة الرئيسية</a></li>
        <li class="nav-item"><a href="#news">  <i class="fas fa-search"></i> </a></li>
        <div class="botton-nav"> 
        <li class="nav-item"><a href="#contact"  id="signin">تسجبل الدخول</a></li>
        <li class="nav-item"><a href="#about" class="bnt" id="signup"> انشاء حساب جديد</a></li>
       </div>
        <li  class="openNavbar"><a href="#" onclick="openNav()">&#9776; </a></li>
    </div>

      </ul>
 
      <div class="hero-image">
            <div class="container hero-text" style="padding-bottom: 80px">
                <h1 style="padding-top: 7%;padding-bottom: 5%; text-align: center">اضف محلك  او ابحث عن اقرب مخلات الغسيل و التلميع لموقعك الحالي</h1>
                <div class="header" style="padding-bottom: 5%;">
                    <button class="btn btn-outline-success" onclick="window.location.href='/search'" id="signinheader" type="button">ابحث عن محل</button>
                    <button class="btn btn-outline-success" onclick="window.location.href='/signup'" id="signupheader"type="button"> &nbsp;&nbsp;اضف محلك  &nbsp; </button>
    
                </div>
            </div>
          </div>
      <div class="section-one">
            <div class="container " >
                <h3 class="under-title">خدماتنا</h3>
               
  
              </div>
        </div>
        <div class="container">
            <h3 class="under-title">افضل المحلات
       
            </h3>
          
       
            <div id="map"  onclick="getlocation()" style=" box-shadow: 0px 0px 5px #555;"></div>
       
                    
           </div>
   </div>
   
   <div id="root"></div>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react-dom.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.21.1/babel.min.js"></script>
   <script type="text/babel">
   class Greeting extends React.Component {
    state = {
    name: '',
  }

  handleChange = event => {
    this.setState({ name: event.target.value });
  }

  handleSubmit = event => {
    event.preventDefault();

    const user = {
      name: this.state.name
    };

    axios.post(`http://localhost:3000/post`, { user })
      .then(res => {
        console.log(res);
        console.log(res.data);
      })
  }


            render() {
              const {title, url ,body} = this.state
      let likes = (true ? "red" : '#f0f0f0')
     return (
      <div>
        <div>
        <form onSubmit={this.handleSubmit}>
          <label>
            Person Name:
            <input type="text" name="name" onChange={this.handleChange} />
          </label>
          <button type="submit">Add</button>
        </form>
        <div id="map"></div>
      </div>
      </div>
    );
       }
   }
   ReactDOM.render(
       <Greeting />,
       document.getElementById('root')
   );
   </script>




      <script>
        function openNav() {
    document.getElementById("mySidenav").style.width = "100%";
    document.getElementById("mySidenav").style.marginRight = "0";
  }
  
  function closeNav() {
    document.getElementById("mySidenav").style.marginRight = "-100%";
    document.getElementById("mySidenav").style.width = "0";
  }

      </script>
      <script>
          function initAutocomplete() {
            var map = new google.maps.Map(document.getElementById('map'), {
              center: { lat: 24.697090, lng: 46.684124 },
              zoom: 13,
              mapTypeId: 'roadmap'
            });
            
            // Create the search box and link it to the UI element(the input).
            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            // Bias the SearchBox results towards current map's viewport.
            map.addListener('bounds_changed', function () {
              searchBox.setBounds(map.getBounds());
            });

            var markers = [];
            // Listen for the event fired when the user selects a prediction and retrieve
            // more details for that place.
            
            searchBox.addListener('places_changed', function () {
              var places = searchBox.getPlaces();

              if (places.length == 0) {
                return;
              }

              // Clear out the old markers.
              markers.forEach(function (marker) {
                marker.setMap(null);
              });
              markers = [];

              // For each place, get the icon, name and location.
              var bounds = new google.maps.LatLngBounds();
              places.forEach(function (place) {
                if (!place.geometry) {
                  console.log("Returned place contains no geometry");
                  return;
                }
                //set coordonates to inputs
                document.getElementById("numberLat").value = place.geometry.location.lat().toString();
                document.getElementById("numberLng").value = place.geometry.location.lng().toString();
                var icon = {
                  url: place.icon,
                  size: new google.maps.Size(71, 71),
                  origin: new google.maps.Point(0, 0),
                  anchor: new google.maps.Point(17, 34),
                  scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                markers.push(new google.maps.Marker({
                  map: map,
                  icon: icon,
                  title: place.name,
                  position: place.geometry.location,
                  draggable: false
                }));

                if (place.geometry.viewport) {
                  // Only geocodes have viewport.
                  bounds.union(place.geometry.viewport);
                } else {
                  bounds.extend(place.geometry.location);
                }
              });
              map.fitBounds(bounds);
            });
            google.maps.event.addListener(map, 'click', function (event) {
              
   
              // Clear out the old markers.
              markers.forEach(function (marker) {
                marker.setMap(null);
              });
              markers = [];
              document.getElementById("numberLat").value = event.latLng.lat().toString();
              document.getElementById("numberLng").value = event.latLng.lng().toString();
           
            
  
              markers.push(new google.maps.Marker({
                map: map,
                position: event.latLng,
                draggable: false
              }));
            });

            // geolocation.
            var infoWindow = new google.maps.InfoWindow;

            if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                  lat: position.coords.latitude,
                  lng: position.coords.longitude
                };

                infoWindow.setPosition(pos);
                infoWindow.setContent('<h5 class="text-map">موقعك</h5>');
                infoWindow.open(map);
                map.setCenter(pos);
              },
                function () {
                  handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
              // Browser doesn't support Geolocation
              handleLocationError(false, infoWindow, map.getCenter());
            }
          }
          google.maps.event.addListener('click', function (e) {
      
                console.log("point")
        });
          function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
              'Error: The Geolocation service failed.' :
              'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
          }

</script>
         
<script src="https://maps.googleapis.com/maps/api/js?key=&libraries=places&callback=initAutocomplete"
asyncdefer></script>
<% include ../_footer %> 