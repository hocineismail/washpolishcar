<% include ../_header %>

<title>انشاء حساب جديد </title>


<style>
  .controls {
    margin-top: 16px;
    border: 1px solid transparent;
    border-radius: 2px 0 0 2px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    height: 32px;
    outline: none;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
  }

  #description {
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
  }

  #infowindow-content .title {
    font-weight: bold;
  }

  #infowindow-content {
    display: none;
  }

  #map #infowindow-content {
    display: inline;
  }

  .pac-card {
    background-color: #fff;
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
    margin-left: 12px;
    padding: 0 11px 0 13px;
    text-overflow: ellipsis;
    width: 400px;
  }

  #pac-container {
    padding-bottom: 12px;
    margin-right: 12px;
  }

  .pac-controls {
    display: inline-block;
    padding: 5px 11px;
  }

  .pac-controls label {
    font-family: Roboto;
    font-size: 13px;
    font-weight: 300;
  }

  #pac-input {
    background-color: #fff;
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
    margin-left: 12px;
    padding: 0 11px 0 13px;
    text-overflow: ellipsis;
    width: 400px;
  }

  #pac-input:focus {
    border-color: #4d90fe;
  }

  #title {
    color: #fff;
    background-color: #4d90fe;
    font-size: 25px;
    font-weight: 500;
    padding: 6px 12px;
  }

  #target {
    width: 345px;
  }

 
</style>
</head>

<body>
  <nav class="navbar navbar-expand-lg  navbar-light" style="color: #fff; background-color: #0075C2">
    <div class="container">
      <a class="navbar-brand" href="/" style="color: #fff; " id="logo">Wash Polish Car</a>
      <a class="nav-link" href="/" style="color: #fff; ">الصفحة الرئيسية </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText"
        aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarText">
        <ul class="navbar-nav mr-auto" dir="ltr">

        </ul>
        <form class="form-inline">
          <button class="btn btn-outline-success" onclick="window.location.href='/login'" id="signin"
            type="button">تسجيل الدخول</button>

        </form>
      </div>
    </div>
  </nav>
  <div class="container">
    <h3 style="padding: 50px; text-align: center"> انشاء حساب جديد</h3>
    <div class="row">
      <% if (error.length > 0) { %>
        <div class="col-md-12">
            <div class="alert alert-danger" role="alert" >
                <%  error.forEach(function(error ) {%>
                  
                    <li><%= error.msg %></li>
           
                  <% }) %>
                </div>
        </div>
        <% } %>
      <div class="col-md-5">
    
        <form action="/signup" method="post">
          <div class="form-group">
            <label for="username">اسم المحل</label>
            <input type="text"  name="username" class="form-control" id="username" aria-describedby="username" placeholder="اسم المحل " required>
          </div>

          <div class="form-group">
            <label for="Fullname">اسم مدير المحل</label>
            <input type="text" name="Fullname" class="form-control" id="Fullname" aria-describedby="Fullname"
              placeholder="اسم مدير المحل " required> 
          </div>

          <div class="form-group">
              <label for="Phone"> رقم جوال مدير المحل</label>
              <input type="number" name="Phone" class="form-control" id="Phone" aria-describedby="Phone"
                placeholder="رقم جوال مدير المحل" required>
            </div>
  

          <div class="form-group">
            <label for="exampleInputEmail1">البريد الإلكتروني</label>
            <input type="email" name="email" class="form-control" id="Email" aria-describedby="Email"
              placeholder="البريد الإلكتروني" required>
            <small id="emailHelp" class="form-text text-muted">لن نشارك بريدك الإلكتروني مع أي شخص آخر.</small>
          </div>

        <div class="form-group">
          <label for="exampleFormControlSelect1">نوع المحل</label>
              <select class="form-control" name="TypeOfStore" required>
                 
                <option>مغسلة سيارات</option>
                <option>تلميع سيارات وعازل حراري</option>
                <option>غسيل متنقل</option>
              </select>
        </div>
        <div class="form-group">
          <label for="Phone"> تاريخ انتهاء السجل التجاري</label>
          <input type="date"  style="text-align: right" name="CommercialRegister" class="form-control" id="CommercialRegister" 
            placeholder=" تاريخ انتهاء السجل التجاري" >
        </div>
        <div class="form-group"  >
          <label for="Phone"> تاريخ انتهاء رخصة البلدية</label>
          <input type="date"  style="text-align: right" name="MunicipalLicense" class="form-control" id="MunicipalLicense" aria-describedby="MunicipalLicense"
            placeholder="تاريخ انتهاء رخصة البلدية" >
        </div>

          <div class="form-group">
            <label for="exampleInputEmail1">البلد</label>
            <input type="text"   class="form-control"  aria-describedby="Country"
              placeholder="السعودية" disabled>
          </div>

          <div class="form-group">
           <label for="exampleFormControlSelect1">المنطقة</label>
           <div id="ZoneIsExist"> 
              <select name="Zone" id="Zone" class="form-control" >
              <% zone.forEach(function(zone) { %>
                <option value="<%= zone._id %>" ><%= zone.Zone %></option>
                <% }) %>
              
              </select>  
            </div>  
            <div id="ZoneIsNotExist" style="display: none"> 
                <input type="text" name="newZone" class="form-control" id="Zone" aria-describedby="Zone"
                placeholder="المنطقة" >  
              </div> 
              <div id="checkboxZone"> 
              <small id="emailHelp" class="form-text text-muted"  >
              <input type="checkbox" name="valuecheckboxzone" id="valuecheckboxzone" onclick="clickzone()" > لا اجد منطقتي في القائمة </small>
            </div>
            </div>
         
          <div class="form-group">
              <label for="exampleFormControlSelect1">المدينة</label>
              <div id="CountryIsExist"> 
                <select class="form-control" id="getCountry" name="Country">
                 
                </select>
              </div>
              <div id="CountryIsNotExist" style="display: none"> 
                  <input type="text" name="newCountry" class="form-control" id="Country" aria-describedby="Country"
                placeholder="المدينة" > 
              </div>
             <div id="checkCounty"> 
                <small id="emailHelp" class="form-text text-muted"  >
                <input type="checkbox" name="valuecheckboxcountry" id="valuecheckboxcountry" onclick="clickCountry()" > لا اجد مدينتي في القائمة
              </small>
            </div>
              </div>
          

            <div class="form-group">
              
                <label for="exampleFormControlSelect1">الحي</label>
                <div id="CityIsExist">
                <select name="City" class="form-control" id="getCity">
                
                </select>
              </div>

              <div id="CityIsNotExist" style="display: none"> 
                  <input type="text" name="newCity" class="form-control" id="City" aria-describedby="City"
                  placeholder="الحي" > 
              </div>
              <div id="checboxCity">
                <small id="emailHelp" class="form-text text-muted"  >
                <input type="checkbox" name="valuecheckboxcity" id="valuecheckboxcity" onclick="clickCity()" > لا اجد حيي في القائمة</small>
              </div>
            </div>
         

          <div class="form-group">
              <label for="Address">العنوان</label>
              <input type="text" name="Address" class="form-control" id="Address" aria-describedby="Address"
                placeholder="العنوان" required>
            </div>
          <div class="form-group">
            <label for="exampleInputPassword1">كلمد المرور</label>
            <input type="password" name="Password" class="form-control" id="password" placeholder="كلمة المرور" required>
          </div>

          <div class="form-group">
            <input class="form-control" style="text-align: right" type="password" placeholder="اعادة كتابة كلمة المرور"
              id="confirm_password" required>
             
          </div>
          <div class="form-group mx-sm-3 mb-2">
                <label for="inputPassword2" class="sr-only">خط العرض</label>
                <input type="text" name="PositionLatitude"  class="form-control" id="numberLat" placeholder="خط العرض"
                   style="display: none" required>
              </div>
              <div class="form-group mx-sm-3 mb-2">
                <label for="inputPassword2" class="sr-only">خط الطول</label>
                <input type="text" name="PositionLongitude"  class="form-control" id="numberLng" placeholder="خط الطول"
                style="display: none" required>
              </div>
               
                  <input type="checkbox" name="vehicle1" value="true" required>اتعهد ان كل  المعلومات صحيحة <br>
          <div class="form-check">
              <br>
            <button type="submit" class="btn btn-primary form-check-label"> انشاء حساب جديد</button>
          </div>

        </form>
      </div>
      <div class="col-md-7">
        <label>الاحداثيات</label>
        <div class="form-inline">         
        </div>
        <!-- set google maps here -->
        <input id="pac-input" class="controls" type="text" placeholder="Search Box">
        <div id="map" style="height: 50%;"></div>
        <script>
          function initAutocomplete() {
            var map = new google.maps.Map(document.getElementById('map'), {
              center: { lat: -33.8688, lng: 151.2195 },
              zoom: 13,
              mapTypeId: 'roadmap'
            });
            
            // Create the search box and link it to the UI element(the input).
            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            // Bias the SearchBox results towards current map's viewport.
            map.addListener('bounds_changed', function () {
              searchBox.setBounds(map.getBounds());
            });

            var markers = [];
            // Listen for the event fired when the user selects a prediction and retrieve
            // more details for that place.
            
            searchBox.addListener('places_changed', function () {
              var places = searchBox.getPlaces();

              if (places.length == 0) {
                return;
              }

              // Clear out the old markers.
              markers.forEach(function (marker) {
                marker.setMap(null);
              });
              markers = [];

              // For each place, get the icon, name and location.
              var bounds = new google.maps.LatLngBounds();
              places.forEach(function (place) {
                if (!place.geometry) {
                  console.log("Returned place contains no geometry");
                  return;
                }
                //set coordonates to inputs
                document.getElementById("numberLat").value = place.geometry.location.lat().toString();
                document.getElementById("numberLng").value = place.geometry.location.lng().toString();
                var icon = {
                  url: place.icon,
                  size: new google.maps.Size(71, 71),
                  origin: new google.maps.Point(0, 0),
                  anchor: new google.maps.Point(17, 34),
                  scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                markers.push(new google.maps.Marker({
                  map: map,
                  icon: icon,
                  title: place.name,
                  position: place.geometry.location,
                  draggable: false
                }));

                if (place.geometry.viewport) {
                  // Only geocodes have viewport.
                  bounds.union(place.geometry.viewport);
                } else {
                  bounds.extend(place.geometry.location);
                }
              });
              map.fitBounds(bounds);
            });
            google.maps.event.addListener(map, 'click', function (event) {
              
   
              // Clear out the old markers.
              markers.forEach(function (marker) {
                marker.setMap(null);
              });
              markers = [];
              document.getElementById("numberLat").value = event.latLng.lat().toString();
              document.getElementById("numberLng").value = event.latLng.lng().toString();
           
            
  
              markers.push(new google.maps.Marker({
                map: map,
                position: event.latLng,
                draggable: false
              }));
            });

            // geolocation.
            var infoWindow = new google.maps.InfoWindow;

            if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                  lat: position.coords.latitude,
                  lng: position.coords.longitude
                };

                infoWindow.setPosition(pos);
                infoWindow.setContent('موقعك');
                infoWindow.open(map);
                map.setCenter(pos);
              },
                function () {
                  handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
              // Browser doesn't support Geolocation
              handleLocationError(false, infoWindow, map.getCenter());
            }
          }
          google.maps.event.addListener('click', function (e) {
      
                console.log("point")
        });
          function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
              'Error: The Geolocation service failed.' :
              'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
          }

        </script>

      </div>
    </div>
  </div>
  </div>


  <!--set Script here-->

  <script src="https://maps.googleapis.com/maps/api/js?key=&libraries=places&callback=initAutocomplete"
    asyncdefer></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.22/vue.js"></script>
  <script src="vue/vue.js"></script>
  


 
  <script>
    var clickzoneValue = false
    var clickcountry = false
    var clickcity = false 
    function clickzone() {
     
     if (clickzoneValue) {
       document.getElementById("ZoneIsExist").style.display = "block";
       document.getElementById("ZoneIsNotExist").style.display = "none";
       document.getElementById("CountryIsExist").style.display = "block";
       document.getElementById("CountryIsNotExist").style.display = "none";
       document.getElementById("CityIsExist").style.display = "block";
        document.getElementById("CityIsNotExist").style.display = "none";

        // display checkbox 
        document.getElementById("checkCounty").style.display = "block";
        document.getElementById("checboxCity").style.display = "block";

        document.getElementById("valuecheckboxcountry").checked = false;
        document.getElementById("valuecheckboxcity").checked = false;
       
        clickcountry = false
        clickzoneValue = false
        clickcity = false
     } else {
       document.getElementById("ZoneIsExist").style.display = "none";
       document.getElementById("ZoneIsNotExist").style.display = "block";
       document.getElementById("CountryIsExist").style.display = "none";
       document.getElementById("CountryIsNotExist").style.display = "block";
       document.getElementById("CityIsExist").style.display = "none";
        document.getElementById("CityIsNotExist").style.display = "block";

        //display checkboxe nopne
        document.getElementById("checkCounty").style.display = "none";
        document.getElementById("checboxCity").style.display = "none";

        document.getElementById("valuecheckboxcountry").checked = false;
        document.getElementById("valuecheckboxcity").checked = false;


        clickcountry = true
       clickzoneValue = true
       clickcity = true
     }
      
     }

     function clickCountry() {

     if (clickcountry) {
       document.getElementById("CountryIsExist").style.display = "block";
       document.getElementById("CountryIsNotExist").style.display = "none";
       document.getElementById("CityIsExist").style.display = "block";
        document.getElementById("CityIsNotExist").style.display = "none";
         // display checkbox 

        document.getElementById("checboxCity").style.display = "block";
        clickcountry = false
        clickcity = false
       document.getElementById("valuecheckboxcity").checked = false;
     } else {
        document.getElementById("CountryIsExist").style.display = "none";
        document.getElementById("CountryIsNotExist").style.display = "block";
        document.getElementById("CityIsExist").style.display = "none";
        document.getElementById("CityIsNotExist").style.display = "block";
             //display checkboxe nopne
       
        document.getElementById("checboxCity").style.display = "none";
        clickcountry = true
        clickcity = true
       
       document.getElementById("valuecheckboxcity").checked = false; }
      
     }



     function clickCity() {

      if (clickcity) {
        document.getElementById("CityIsExist").style.display = "block";
        document.getElementById("CityIsNotExist").style.display = "none";
        clickcity = false
      } else {
        document.getElementById("CityIsExist").style.display = "none";
        document.getElementById("CityIsNotExist").style.display = "block";
        clickcity = true
      }
      
      }

      function change() {
      
        document.getElementById("update").style.display = "none";
        document.getElementById("close").style.display = "block";
      }
</script>

  <script type="text/javascript">
    var password = document.getElementById("password")
      , confirm_password = document.getElementById("confirm_password");
    function validatePassword() {
      if (password.value != confirm_password.value) {
        confirm_password.setCustomValidity("Passwords Don't Match");
      } else {
        confirm_password.setCustomValidity('');
      }
    }
    password.onchange = validatePassword;
    confirm_password.onkeyup = validatePassword;
  </script>

  <script>
    $(function() {
        $("#Zone").on("click", function () {
          console.log( $("#Zone").val());
          var Zone = $('#Zone').val();
          $.ajax({
            type: 'post',
            url: '/getCountry',
            dataType: "text",  
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
              Zone: Zone
            }),
                   
              cache: false,
                timeout: 5000,
                complete: function() {
                 
                  console.log('process complete');
                  console.log(data.Country)
                },
                success: function(res) {
                  
                  var resu = JSON.parse(res)
         var html;        
        
         html = ''
          
         for (var i = 0; i< resu.country.length; i++) {
          
            html += '<option value ="'+ resu.country[i]._id + '">' + resu.country[i].Country +  '</option>';
          
        }
        html += ''
         
         $('#getCountry').html(html);
       },
                error: function() {
                 
                  console.log('process error');
                },
          
          });
        });
      });

</script>
<script>
       // function get city

       $(function() {
        $("#getCountry").on("click", function () {
          console.log("11212121")
          console.log( $("#getCountry").val());
          var Country = $('#getCountry').val();
          $.ajax({
            type: 'post',
            url: '/getCiy',
            dataType: "text",  
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
              Country: Country
            }),
                   
              cache: false,
                timeout: 5000,
                complete: function() {
                 
                  console.log('process complete');
                  console.log(data.country)
                },
                success: function(res) {
                  
                  var resu = JSON.parse(res)
         var html;        
        
         html = ''
          
         for (var i = 0; i< resu.city.length; i++) {
          
            html += '<option value ="'+ resu.city[i]._id + '">' + resu.city[i].City +  '</option>';
          
        }
        html += ''
         
         $('#getCity').html(html);
       },
                error: function() {
                 
                  console.log('process error');
                },
          
          });
        });
      });
     
</script>
<% include ../_footer %>